"import \"hashes/sha256/512bit\" as sha256\nimport \"utils/multiplexer/256bit\" as multiplex\nimport \"utils/binary/not\" as NOT\n\n// Merkle-Tree inclusion proof for tree depth 17\n\ndef main(field[256] rootDigest, private field[256] leafDigest, private field[16] directionSelector, field[16][256] PathDigest) -> (field):\n\n    //Setup\n    field[256] currentDigest = leafDigest\n    field counter = 1\n    field currentDirection = 0\n\n    field[256] currentPathDigest = PathDigest[0]\n    \n        for field i in 0..15 do\n        currentDirection = directionSelector[i]\n        currentPathDigest = PathDigest[i]\n        field[256] lhs = multiplex(currentDirection, currentDigest, currentPathDigest)\n        field[256] rhs = multiplex(NOT(currentDirection), currentDigest, currentPathDigest)\n        currentDigest = sha256(lhs, rhs)\n        counter = counter + 1\n        endfor\n    \n    //Asserts\n    counter == 17\n    rootDigest == currentDigest\n\n    return 1 //return true in success\n"
