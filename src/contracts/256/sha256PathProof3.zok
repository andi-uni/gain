import "hashes/sha256/512bitPacked" as sha256
import "utils/multiplexer/2bit" as multiplex
import "utils/binary/not" as NOT

// Merkle-Tree inclusion proof for tree depth 3

def main(field[2] rootDigest, private field[2] leafDigest, private field[2] directionSelector, field[2] PathDigest0, private field[2] PathDigest1) -> (field):

	//Setup
	field[2] currentDigest = leafDigest
	field counter = 1
	field currentDirection = 0
	
	//Loop up the tree
	currentDirection = directionSelector[0]
	lhs = multiplex(currentDirection, currentDigest, PathDigest0)
	rhs = multiplex(NOT(currentDirection), currentDigest, PathDigest0)
	currentDigest = sha256([lhs[0],lhs[1], rhs[0], rhs[1]])
	counter = counter + 1

	currentDirection = directionSelector[1]
	lhs = multiplex(currentDirection, currentDigest, PathDigest1)
	rhs = multiplex(NOT(currentDirection), currentDigest, PathDigest1)
	currentDigest = sha256([lhs[0],lhs[1], rhs[0], rhs[1]])
	counter = counter + 1

	//Asserts
	counter == 3
	rootDigest == currentDigest

	return 1 //return true in success
